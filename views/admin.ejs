<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Panel - Al-Shorouk Radiology Management System</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="/css/custom.css" rel="stylesheet">
    <style>
        body {
            background-color: #f8f9fa;
        }
        .navbar-brand {
            font-weight: bold;
        }
        .navbar-brand i {
            color: #ffffff;
        }
        .navbar-nav .nav-link {
            font-weight: 500;
            transition: color 0.3s ease;
        }
        .navbar-nav .nav-link:hover {
            color: rgba(255, 255, 255, 0.8) !important;
        }
        .navbar-nav .nav-link.active {
            color: #ffffff !important;
            background-color: rgba(255, 255, 255, 0.1);
            border-radius: 5px;
        }
        .user-info {
            font-size: 0.9em;
            color: rgba(255, 255, 255, 0.9);
        }
        .user-role {
            font-weight: 600;
            text-transform: capitalize;
        }
        .logout-btn {
            border: 1px solid rgba(255, 255, 255, 0.3);
            transition: all 0.3s ease;
        }
        .logout-btn:hover {
            background-color: rgba(255, 255, 255, 0.1);
            border-color: rgba(255, 255, 255, 0.5);
        }
        .card {
            border: none;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        .btn-custom {
            border-radius: 25px;
            padding: 8px 20px;
        }
        .table th {
            background-color: #007bff;
            color: white;
            border: none;
        }
        .table td {
            vertical-align: middle;
        }
        .badge {
            font-size: 0.8em;
        }
        .status-active {
            background-color: #28a745;
        }
        .status-inactive {
            background-color: #dc3545;
        }
        .sortable {
            cursor: pointer;
            user-select: none;
            position: relative;
        }
        .sortable:hover {
            background-color: rgba(0, 123, 255, 0.1);
        }
        .sort-icon {
            margin-left: 5px;
            opacity: 0.5;
        }
        .sortable.sort-asc .sort-icon:before {
            content: "\f145"; /* fa-sort-up */
        }
        .sortable.sort-desc .sort-icon:before {
            content: "\f144"; /* fa-sort-down */
        }
    </style>
</head>
<body>
    <!-- Navigation -->
    <%- include('navigation', { currentPage: 'admin' }) %>

    <div class="container mt-4">
        <!-- Header -->
        <div class="row mb-4">
            <div class="col-12">
                <!-- Breadcrumbs -->
                <nav aria-label="breadcrumb" class="mb-3">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item">
                            <a href="/"><i class="fas fa-home me-1"></i>Home</a>
                        </li>
                        <li class="breadcrumb-item">
                            <a href="/admin">Admin</a>
                        </li>
                        <li class="breadcrumb-item active" aria-current="page">User Management</li>
                    </ol>
                </nav>

                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h2><i class="fas fa-users-cog me-2"></i>User Management</h2>
                        <p class="text-muted">Manage system users and their roles</p>
                    </div>
                    <a href="/admin/users/new" class="btn btn-primary btn-custom">
                        <i class="fas fa-plus me-2"></i>Add New User
                    </a>
                </div>
            </div>
        </div>

        <!-- Search and Filters -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <div class="row g-3">
                            <div class="col-md-6">
                                <label for="userSearch" class="form-label">
                                    <i class="fas fa-search me-1"></i>Search Users
                                </label>
                                <input type="text" class="form-control" id="userSearch" placeholder="Search by username, email, or full name...">
                            </div>
                            <div class="col-md-3">
                                <label for="roleFilter" class="form-label">
                                    <i class="fas fa-filter me-1"></i>Filter by Role
                                </label>
                                <select class="form-select" id="roleFilter">
                                    <option value="all">All Roles</option>
                                    <option value="admin">Admin</option>
                                    <option value="nurse">Nurse</option>
                                    <option value="physician">Physician</option>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <label for="statusFilter" class="form-label">
                                    <i class="fas fa-circle me-1"></i>Filter by Status
                                </label>
                                <select class="form-select" id="statusFilter">
                                    <option value="all">All Status</option>
                                    <option value="active">Active</option>
                                    <option value="inactive">Inactive</option>
                                </select>
                            </div>
                        </div>
                        <div class="mt-3 d-flex justify-content-between align-items-center">
                            <small class="text-muted">
                                <i class="fas fa-info-circle me-1"></i>
                                Showing <span id="visibleCount">0</span> of <span id="totalCount">0</span> users
                            </small>
                            <div class="bulk-actions" id="bulkActions" style="display: none;">
                                <small class="text-muted me-2"><span id="selectedCount">0</span> selected</small>
                                <div class="btn-group btn-group-sm" role="group">
                                    <button type="button" class="btn btn-outline-success" id="bulkActivate">
                                        <i class="fas fa-check me-1"></i>Activate
                                    </button>
                                    <button type="button" class="btn btn-outline-warning" id="bulkDeactivate">
                                        <i class="fas fa-ban me-1"></i>Deactivate
                                    </button>
                                    <button type="button" class="btn btn-outline-danger" id="bulkDelete">
                                        <i class="fas fa-trash me-1"></i>Delete
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Users Table -->
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <% if (users && users.length > 0) { %>
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th width="40">
                                                <input type="checkbox" class="form-check-input" id="selectAllUsers">
                                            </th>
                                            <th class="sortable" data-column="1">
                                                <i class="fas fa-user me-1"></i>Username
                                                <i class="fas fa-sort sort-icon"></i>
                                            </th>
                                            <th class="sortable" data-column="2">
                                                <i class="fas fa-envelope me-1"></i>Email
                                                <i class="fas fa-sort sort-icon"></i>
                                            </th>
                                            <th class="sortable" data-column="3">
                                                <i class="fas fa-user-tag me-1"></i>Full Name
                                                <i class="fas fa-sort sort-icon"></i>
                                            </th>
                                            <th class="sortable" data-column="4">
                                                <i class="fas fa-shield-alt me-1"></i>Role
                                                <i class="fas fa-sort sort-icon"></i>
                                            </th>
                                            <th class="sortable" data-column="5">
                                                <i class="fas fa-circle me-1"></i>Status
                                                <i class="fas fa-sort sort-icon"></i>
                                            </th>
                                            <th class="sortable" data-column="6">
                                                <i class="fas fa-calendar me-1"></i>Created
                                                <i class="fas fa-sort sort-icon"></i>
                                            </th>
                                            <th><i class="fas fa-cogs me-1"></i>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% users.forEach(user => { %>
                                            <tr>
                                                <td>
                                                    <input type="checkbox" class="form-check-input user-checkbox" data-user-id="<%= user.user_id %>">
                                                </td>
                                                <td><%= user.username %></td>
                                                <td><%= user.email %></td>
                                                <td><%= user.full_name %></td>
                                                <td>
                                                    <% if (user.role === 'admin') { %>
                                                        <span class="badge bg-danger"><i class="fas fa-user-shield me-1"></i>Admin</span>
                                                    <% } else if (user.role === 'nurse') { %>
                                                        <span class="badge bg-info"><i class="fas fa-user-nurse me-1"></i>Nurse</span>
                                                    <% } else if (user.role === 'physician') { %>
                                                        <span class="badge bg-success"><i class="fas fa-user-md me-1"></i>Physician</span>
                                                    <% } else { %>
                                                        <span class="badge bg-secondary"><%= user.role %></span>
                                                    <% } %>
                                                </td>
                                                <td>
                                                    <% if (user.is_active) { %>
                                                        <span class="badge status-active"><i class="fas fa-check-circle me-1"></i>Active</span>
                                                    <% } else { %>
                                                        <span class="badge status-inactive"><i class="fas fa-times-circle me-1"></i>Inactive</span>
                                                    <% } %>
                                                </td>
                                                <td><%= new Date(user.created_at).toLocaleDateString() %></td>
                                                <td>
                                                    <div class="btn-group" role="group">
                                                        <a href="/admin/users/<%= user.user_id %>/edit" class="btn btn-sm btn-outline-primary" title="Edit User">
                                                            <i class="fas fa-edit"></i>
                                                        </a>
                                                        <button type="button" class="btn btn-sm btn-outline-danger" title="Delete User"
                                                                onclick="confirmDeleteUser('<%= user.user_id %>', '<%= user.full_name %>')">
                                                            <i class="fas fa-trash"></i>
                                                        </button>
                                                    </div>
                                                </td>
                                            </tr>
                                        <% }); %>
                                    </tbody>
                                </table>
                            </div>
                        <% } else { %>
                            <div class="text-center py-5">
                                <i class="fas fa-users fa-3x text-muted mb-3"></i>
                                <h4>No Users Found</h4>
                                <p class="text-muted">Start by adding your first user to the system.</p>
                                <a href="/admin/users/new" class="btn btn-primary">
                                    <i class="fas fa-plus me-2"></i>Add First User
                                </a>
                            </div>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>

        <!-- Statistics Cards -->
        <% if (users && users.length > 0) { %>
            <div class="row mt-4">
                <div class="col-md-3">
                    <div class="card text-center">
                        <div class="card-body">
                            <i class="fas fa-users fa-2x text-primary mb-2"></i>
                            <h4><%= users.length %></h4>
                            <p class="text-muted mb-0">Total Users</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-center">
                        <div class="card-body">
                            <i class="fas fa-user-shield fa-2x text-danger mb-2"></i>
                            <h4><%= users.filter(u => u.role === 'admin').length %></h4>
                            <p class="text-muted mb-0">Admins</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-center">
                        <div class="card-body">
                            <i class="fas fa-user-nurse fa-2x text-info mb-2"></i>
                            <h4><%= users.filter(u => u.role === 'nurse').length %></h4>
                            <p class="text-muted mb-0">Nurses</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-center">
                        <div class="card-body">
                            <i class="fas fa-user-md fa-2x text-success mb-2"></i>
                            <h4><%= users.filter(u => u.role === 'physician').length %></h4>
                            <p class="text-muted mb-0">Physicians</p>
                        </div>
                    </div>
                </div>
            </div>
        <% } %>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Delete User Confirmation Modal -->
    <div class="modal fade" id="deleteUserModal" tabindex="-1" aria-labelledby="deleteUserModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title" id="deleteUserModalLabel">
                        <i class="fas fa-exclamation-triangle me-2"></i>Confirm User Deletion
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="alert alert-danger">
                        <i class="fas fa-warning me-2"></i>
                        <strong>Warning:</strong> This action cannot be undone!
                    </div>
                    <p>Are you sure you want to delete the user <strong id="deleteUserName"></strong>?</p>
                    <ul class="text-muted">
                        <li>All user data will be permanently removed</li>
                        <li>The user will no longer be able to access the system</li>
                        <li>Any associated records may be affected</li>
                    </ul>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times me-2"></i>Cancel
                    </button>
                    <form id="deleteUserForm" method="POST" class="d-inline">
                        <button type="submit" class="btn btn-danger">
                            <i class="fas fa-trash me-2"></i>Yes, Delete User
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Handle delete user modal
        function confirmDeleteUser(userId, userName) {
            document.getElementById('deleteUserName').textContent = userName;
            document.getElementById('deleteUserForm').action = `/admin/users/${userId}/delete`;

            const modal = new bootstrap.Modal(document.getElementById('deleteUserModal'));
            modal.show();
        }

        // Search and filter functionality
        document.addEventListener('DOMContentLoaded', function() {
            const userSearch = document.getElementById('userSearch');
            const roleFilter = document.getElementById('roleFilter');
            const statusFilter = document.getElementById('statusFilter');
            const userTable = document.querySelector('.table tbody');
            const rows = userTable ? Array.from(userTable.querySelectorAll('tr')) : [];
            const visibleCount = document.getElementById('visibleCount');
            const totalCount = document.getElementById('totalCount');
            let currentSort = { column: -1, direction: 'asc' };

            // Set initial counts
            if (totalCount) totalCount.textContent = rows.length;
            if (visibleCount) visibleCount.textContent = rows.length;

            function filterUsers() {
                const searchTerm = userSearch.value.toLowerCase();
                const roleValue = roleFilter.value;
                const statusValue = statusFilter.value;

                let visibleRows = 0;

                rows.forEach(row => {
                    const username = row.cells[0].textContent.toLowerCase();
                    const email = row.cells[1].textContent.toLowerCase();
                    const fullName = row.cells[2].textContent.toLowerCase();
                    const role = row.cells[3].textContent.toLowerCase();
                    const status = row.cells[4].textContent.toLowerCase();

                    const matchesSearch = !searchTerm ||
                        username.includes(searchTerm) ||
                        email.includes(searchTerm) ||
                        fullName.includes(searchTerm);

                    const matchesRole = roleValue === 'all' || role.includes(roleValue);
                    const matchesStatus = statusValue === 'all' || status.includes(statusValue);

                    if (matchesSearch && matchesRole && matchesStatus) {
                        row.style.display = '';
                        visibleRows++;
                    } else {
                        row.style.display = 'none';
                    }
                });

                if (visibleCount) visibleCount.textContent = visibleRows;

                // Re-apply current sort to visible rows
                if (currentSort.column >= 0) {
                    sortTable(currentSort.column, currentSort.direction, false);
                }

                // Update bulk actions after filtering
                updateBulkActions();
            }

            function sortTable(columnIndex, direction, updateSort = true) {
                const tbody = userTable;
                const visibleRows = Array.from(rows).filter(row => row.style.display !== 'none');

                visibleRows.sort((a, b) => {
                    let aVal = a.cells[columnIndex].textContent.trim();
                    let bVal = b.cells[columnIndex].textContent.trim();

                    // Special handling for date column
                    if (columnIndex === 5) {
                        aVal = new Date(aVal);
                        bVal = new Date(bVal);
                    } else {
                        aVal = aVal.toLowerCase();
                        bVal = bVal.toLowerCase();
                    }

                    if (direction === 'asc') {
                        return aVal > bVal ? 1 : aVal < bVal ? -1 : 0;
                    } else {
                        return aVal < bVal ? 1 : aVal > bVal ? -1 : 0;
                    }
                });

                // Clear existing rows and re-append sorted ones
                visibleRows.forEach(row => tbody.appendChild(row));

                if (updateSort) {
                    // Update sort indicators
                    document.querySelectorAll('.sortable').forEach(header => {
                        header.classList.remove('sort-asc', 'sort-desc');
                    });

                    const header = document.querySelector(`.sortable[data-column="${columnIndex}"]`);
                    if (header) {
                        header.classList.add(`sort-${direction}`);
                    }

                    currentSort = { column: columnIndex, direction };
                }
            }

            // Add sorting event listeners
            document.querySelectorAll('.sortable').forEach(header => {
                header.addEventListener('click', function() {
                    const columnIndex = parseInt(this.dataset.column);
                    let direction = 'asc';

                    if (currentSort.column === columnIndex && currentSort.direction === 'asc') {
                        direction = 'desc';
                    }

                    sortTable(columnIndex, direction);
                });
            });

            // Add event listeners
            if (userSearch) userSearch.addEventListener('input', filterUsers);
            if (roleFilter) roleFilter.addEventListener('change', filterUsers);
            if (statusFilter) statusFilter.addEventListener('change', filterUsers);

            // Bulk operations functionality
            const selectAllCheckbox = document.getElementById('selectAllUsers');
            const userCheckboxes = document.querySelectorAll('.user-checkbox');
            const bulkActions = document.getElementById('bulkActions');
            const selectedCount = document.getElementById('selectedCount');
            const bulkActivateBtn = document.getElementById('bulkActivate');
            const bulkDeactivateBtn = document.getElementById('bulkDeactivate');
            const bulkDeleteBtn = document.getElementById('bulkDelete');

            function updateBulkActions() {
                const checkedBoxes = document.querySelectorAll('.user-checkbox:checked');
                const count = checkedBoxes.length;

                if (selectedCount) selectedCount.textContent = count;

                if (count > 0) {
                    bulkActions.style.display = 'block';
                } else {
                    bulkActions.style.display = 'none';
                }

                // Update select all checkbox state
                const visibleCheckboxes = Array.from(userCheckboxes).filter(cb => {
                    return cb.closest('tr').style.display !== 'none';
                });

                const checkedVisibleBoxes = visibleCheckboxes.filter(cb => cb.checked);

                if (selectAllCheckbox) {
                    selectAllCheckbox.checked = visibleCheckboxes.length > 0 && checkedVisibleBoxes.length === visibleCheckboxes.length;
                    selectAllCheckbox.indeterminate = checkedVisibleBoxes.length > 0 && checkedVisibleBoxes.length < visibleCheckboxes.length;
                }
            }

            // Select all functionality
            if (selectAllCheckbox) {
                selectAllCheckbox.addEventListener('change', function() {
                    const visibleCheckboxes = Array.from(userCheckboxes).filter(cb => {
                        return cb.closest('tr').style.display !== 'none';
                    });

                    visibleCheckboxes.forEach(cb => {
                        cb.checked = this.checked;
                    });

                    updateBulkActions();
                });
            }

            // Individual checkbox change events
            userCheckboxes.forEach(checkbox => {
                checkbox.addEventListener('change', updateBulkActions);
            });

            // Bulk action handlers
            if (bulkActivateBtn) {
                bulkActivateBtn.addEventListener('click', function() {
                    const selectedUsers = Array.from(document.querySelectorAll('.user-checkbox:checked')).map(cb => cb.dataset.userId);
                    if (selectedUsers.length === 0) return;

                    if (confirm(`Are you sure you want to activate ${selectedUsers.length} user(s)?`)) {
                        // Here you would typically send a POST request to bulk activate
                        alert('Bulk activate functionality would be implemented here with API call to activate users: ' + selectedUsers.join(', '));
                    }
                });
            }

            if (bulkDeactivateBtn) {
                bulkDeactivateBtn.addEventListener('click', function() {
                    const selectedUsers = Array.from(document.querySelectorAll('.user-checkbox:checked')).map(cb => cb.dataset.userId);
                    if (selectedUsers.length === 0) return;

                    if (confirm(`Are you sure you want to deactivate ${selectedUsers.length} user(s)?`)) {
                        // Here you would typically send a POST request to bulk deactivate
                        alert('Bulk deactivate functionality would be implemented here with API call to deactivate users: ' + selectedUsers.join(', '));
                    }
                });
            }

            if (bulkDeleteBtn) {
                bulkDeleteBtn.addEventListener('click', function() {
                    const selectedUsers = Array.from(document.querySelectorAll('.user-checkbox:checked')).map(cb => cb.dataset.userId);
                    if (selectedUsers.length === 0) return;

                    if (confirm(`Are you sure you want to permanently delete ${selectedUsers.length} user(s)? This action cannot be undone!`)) {
                        // Here you would typically send a POST request to bulk delete
                        alert('Bulk delete functionality would be implemented here with API call to delete users: ' + selectedUsers.join(', '));
                    }
                });
            }

            // Initial update
            updateBulkActions();
        });
    </script>
</body>
</html>